// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		0A881B6C1F6B0E5D008CCA08 /* 675. Cut Off Trees for Golf Event.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B4B1F6B0E5C008CCA08 /* 675. Cut Off Trees for Golf Event.cpp */; };
		0A881B6D1F6B0E5D008CCA08 /* 673. Number of Longest Increasing Subsequence.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B4C1F6B0E5C008CCA08 /* 673. Number of Longest Increasing Subsequence.cpp */; };
		0A881B6E1F6B0E5D008CCA08 /* 676. Implement Magic Dictionary.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B4D1F6B0E5C008CCA08 /* 676. Implement Magic Dictionary.cpp */; };
		0A881B6F1F6B0E5D008CCA08 /* 674. Longest Continuous Increasing Subsequence.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B4E1F6B0E5C008CCA08 /* 674. Longest Continuous Increasing Subsequence.cpp */; };
		0A881B701F6B0E5D008CCA08 /* 247. Strobogrammatic Number II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B4F1F6B0E5C008CCA08 /* 247. Strobogrammatic Number II.cpp */; };
		0A881B711F6B0E5D008CCA08 /* 245. Shortest Word Distance III.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B501F6B0E5C008CCA08 /* 245. Shortest Word Distance III.cpp */; };
		0A881B721F6B0E5D008CCA08 /* 469. Convex Polygon.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B511F6B0E5C008CCA08 /* 469. Convex Polygon.cpp */; };
		0A881B731F6B0E5D008CCA08 /* 444. Sequence Reconstruction.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B521F6B0E5C008CCA08 /* 444. Sequence Reconstruction.cpp */; };
		0A881B741F6B0E5D008CCA08 /* 439. Ternary Expression Parser.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B531F6B0E5C008CCA08 /* 439. Ternary Expression Parser.cpp */; };
		0A881B751F6B0E5D008CCA08 /* 244. Shortest Word Distance II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B541F6B0E5C008CCA08 /* 244. Shortest Word Distance II.cpp */; };
		0A881B761F6B0E5D008CCA08 /* 186. Reverse Words in a String II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B551F6B0E5C008CCA08 /* 186. Reverse Words in a String II.cpp */; };
		0A881B771F6B0E5D008CCA08 /* 163. Missing Ranges.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B561F6B0E5C008CCA08 /* 163. Missing Ranges.cpp */; };
		0A881B781F6B0E5D008CCA08 /* 156. Binary Tree Upside Down.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B571F6B0E5C008CCA08 /* 156. Binary Tree Upside Down.cpp */; };
		0A881B791F6B0E5D008CCA08 /* 281. Zigzag Iterator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B581F6B0E5C008CCA08 /* 281. Zigzag Iterator.cpp */; };
		0A881B7A1F6B0E5D008CCA08 /* 161. One Edit Distance.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B591F6B0E5C008CCA08 /* 161. One Edit Distance.cpp */; };
		0A881B7B1F6B0E5D008CCA08 /* 269. Alien Dictionary.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B5A1F6B0E5C008CCA08 /* 269. Alien Dictionary.cpp */; };
		0A881B7C1F6B0E5D008CCA08 /* 311. Sparse Matrix Multiplication.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B5B1F6B0E5D008CCA08 /* 311. Sparse Matrix Multiplication.cpp */; };
		0A881B7D1F6B0E5D008CCA08 /* 253. Meeting Rooms II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B5C1F6B0E5D008CCA08 /* 253. Meeting Rooms II.cpp */; };
		0A881B7E1F6B0E5D008CCA08 /* 296. Best Meeting Point.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B5D1F6B0E5D008CCA08 /* 296. Best Meeting Point.cpp */; };
		0A881B7F1F6B0E5D008CCA08 /* 325. Maximum Size Subarray Sum Equals k.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B5E1F6B0E5D008CCA08 /* 325. Maximum Size Subarray Sum Equals k.cpp */; };
		0A881B801F6B0E5D008CCA08 /* 251. Flatten 2D Vector.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B5F1F6B0E5D008CCA08 /* 251. Flatten 2D Vector.cpp */; };
		0A881B811F6B0E5D008CCA08 /* 159. Longest Substring with At Most Two Distinct Characters.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B601F6B0E5D008CCA08 /* 159. Longest Substring with At Most Two Distinct Characters.cpp */; };
		0A881B821F6B0E5D008CCA08 /* 567. Permutation in String.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B611F6B0E5D008CCA08 /* 567. Permutation in String.cpp */; };
		0A881B831F6B0E5D008CCA08 /* 209. Minimum Size Subarray Sum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B621F6B0E5D008CCA08 /* 209. Minimum Size Subarray Sum.cpp */; };
		0A881B841F6B0E5D008CCA08 /* 57. Insert Interval.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B631F6B0E5D008CCA08 /* 57. Insert Interval.cpp */; };
		0A881B851F6B0E5D008CCA08 /* 324. Wiggle Sort II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B641F6B0E5D008CCA08 /* 324. Wiggle Sort II.cpp */; };
		0A881B861F6B0E5D008CCA08 /* 75. Sort Colors.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B651F6B0E5D008CCA08 /* 75. Sort Colors.cpp */; };
		0A881B871F6B0E5D008CCA08 /* 34. Search for a Range.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B661F6B0E5D008CCA08 /* 34. Search for a Range.cpp */; };
		0A881B881F6B0E5D008CCA08 /* 354. Russian Doll Envelopes.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B671F6B0E5D008CCA08 /* 354. Russian Doll Envelopes.cpp */; };
		0A881B891F6B0E5D008CCA08 /* 222. Count Complete Tree Nodes.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B681F6B0E5D008CCA08 /* 222. Count Complete Tree Nodes.cpp */; };
		0A881B8A1F6B0E5D008CCA08 /* 272. Closest Binary Search Tree Value II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B691F6B0E5D008CCA08 /* 272. Closest Binary Search Tree Value II.cpp */; };
		0A881B8B1F6B0E5D008CCA08 /* 71. Simplify Path.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B6A1F6B0E5D008CCA08 /* 71. Simplify Path.cpp */; };
		0A881B8C1F6B0E5D008CCA08 /* 547. Friend Circles   Add to List 547. Friend Circles 547. Friend Circles 547. Friend Circles 547. Friend Circle.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B6B1F6B0E5D008CCA08 /* 547. Friend Circles   Add to List 547. Friend Circles 547. Friend Circles 547. Friend Circles 547. Friend Circle.cpp */; };
		0A881B8E1F6E09FA008CCA08 /* 680. Valid Palindrome II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A881B8D1F6E09FA008CCA08 /* 680. Valid Palindrome II.cpp */; };
		360685911F5130B40017EC53 /* WordSearch2.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 360685901F5130B40017EC53 /* WordSearch2.cpp */; };
		360685941F51363E0017EC53 /* Exist.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 360685931F51363E0017EC53 /* Exist.cpp */; };
		360685961F5136ED0017EC53 /* FindMaxAverage.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 360685951F5136ED0017EC53 /* FindMaxAverage.cpp */; };
		360685981F51373B0017EC53 /* SetZeroes.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 360685971F51373B0017EC53 /* SetZeroes.cpp */; };
		3606859A1F5137B80017EC53 /* GameOfLife.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 360685991F5137B80017EC53 /* GameOfLife.cpp */; };
		3606859C1F51381E0017EC53 /* FindRepeatedDnaSequences.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 3606859B1F51381E0017EC53 /* FindRepeatedDnaSequences.cpp */; };
		3606859E1F51C98D0017EC53 /* CountUnivalSubtrees.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 3606859D1F51C98D0017EC53 /* CountUnivalSubtrees.cpp */; };
		360685A01F51D3290017EC53 /* IsSubtree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 3606859F1F51D3290017EC53 /* IsSubtree.cpp */; };
		360685A21F51F06B0017EC53 /* MostFrequentSubtreeSum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 360685A11F51F06B0017EC53 /* MostFrequentSubtreeSum.cpp */; };
		360685A41F5214620017EC53 /* MinimumWindowSubstring.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 360685A31F5214620017EC53 /* MinimumWindowSubstring.cpp */; };
		360685A61F5258B10017EC53 /* Non-decreasingArray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 360685A51F5258B10017EC53 /* Non-decreasingArray.cpp */; };
		360685A81F525F720017EC53 /* PathSumIV.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 360685A71F525F720017EC53 /* PathSumIV.cpp */; };
		360685AD1F5274330017EC53 /* BeautifulArrangement2.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 360685AC1F5274330017EC53 /* BeautifulArrangement2.cpp */; };
		360685AF1F527B940017EC53 /* Kth largest Number in Multiplication Table.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 360685AE1F527B930017EC53 /* Kth largest Number in Multiplication Table.cpp */; };
		368031911F71D83B0002F47A /* 259. 3Sum Smaller.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 368031871F71D83A0002F47A /* 259. 3Sum Smaller.cpp */; };
		368031921F71D83B0002F47A /* 254. Factor Combinations.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 368031881F71D83B0002F47A /* 254. Factor Combinations.cpp */; };
		368031931F71D83B0002F47A /* 267. Palindrome Permutation II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 368031891F71D83B0002F47A /* 267. Palindrome Permutation II.cpp */; };
		368031941F71D83B0002F47A /* 285. Inorder Successor in BST.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 3680318A1F71D83B0002F47A /* 285. Inorder Successor in BST.cpp */; };
		368031951F71D83B0002F47A /* 677. Map Sum Pairs.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 3680318B1F71D83B0002F47A /* 677. Map Sum Pairs.cpp */; };
		368031961F71D83B0002F47A /* 679. 24 Game.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 3680318C1F71D83B0002F47A /* 679. 24 Game.cpp */; };
		368031971F71D83B0002F47A /* 255. Verify Preorder Sequence in Binary Search Tree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 3680318D1F71D83B0002F47A /* 255. Verify Preorder Sequence in Binary Search Tree.cpp */; };
		368031981F71D83B0002F47A /* 286. Walls and Gates.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 3680318E1F71D83B0002F47A /* 286. Walls and Gates.cpp */; };
		368031991F71D83B0002F47A /* 271. Encode and Decode Strings.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 3680318F1F71D83B0002F47A /* 271. Encode and Decode Strings.cpp */; };
		3680319A1F71D83B0002F47A /* 678. Valid Parenthesis String.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 368031901F71D83B0002F47A /* 678. Valid Parenthesis String.cpp */; };
		36D18A681F54C5520017032F /* 621. Task Scheduler.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 36D18A671F54C5520017032F /* 621. Task Scheduler.cpp */; };
		36D18A6A1F54F36E0017032F /* 358. Rearrange String k Distance Apart.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 36D18A691F54F36E0017032F /* 358. Rearrange String k Distance Apart.cpp */; };
		36D18A6C1F5503C70017032F /* 134. Gas Station.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 36D18A6B1F5503C70017032F /* 134. Gas Station.cpp */; };
		36D18A6E1F550BC40017032F /* 45. Jump Game II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 36D18A6D1F550BC40017032F /* 45. Jump Game II.cpp */; };
		36D18A701F561E0F0017032F /* 207. Course Schedule.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 36D18A6F1F561E0F0017032F /* 207. Course Schedule.cpp */; };
		36D18A721F5667840017032F /* 261. Graph Valid Tree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 36D18A711F5667840017032F /* 261. Graph Valid Tree.cpp */; };
		36D18A741F5719A10017032F /* 323. Number of Connected Components in an Undirected Graph.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 36D18A731F5719A10017032F /* 323. Number of Connected Components in an Undirected Graph.cpp */; };
		36D18A781F57A5AF0017032F /* 657. Judge Route Circle.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 36D18A771F57A5AF0017032F /* 657. Judge Route Circle.cpp */; };
		36D18A7A1F57A8660017032F /* 32. Longest Valid Parentheses.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 36D18A791F57A8660017032F /* 32. Longest Valid Parentheses.cpp */; };
		36ECE6881E9712830064A628 /* main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 36ECE6871E9712830064A628 /* main.cpp */; };
/* End PBXBuildFile section */

/* Begin PBXCopyFilesBuildPhase section */
		36ECE6821E9712830064A628 /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = /usr/share/man/man1/;
			dstSubfolderSpec = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 1;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		0A881B4B1F6B0E5C008CCA08 /* 675. Cut Off Trees for Golf Event.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "675. Cut Off Trees for Golf Event.cpp"; sourceTree = "<group>"; };
		0A881B4C1F6B0E5C008CCA08 /* 673. Number of Longest Increasing Subsequence.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "673. Number of Longest Increasing Subsequence.cpp"; sourceTree = "<group>"; };
		0A881B4D1F6B0E5C008CCA08 /* 676. Implement Magic Dictionary.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "676. Implement Magic Dictionary.cpp"; sourceTree = "<group>"; };
		0A881B4E1F6B0E5C008CCA08 /* 674. Longest Continuous Increasing Subsequence.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "674. Longest Continuous Increasing Subsequence.cpp"; sourceTree = "<group>"; };
		0A881B4F1F6B0E5C008CCA08 /* 247. Strobogrammatic Number II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "247. Strobogrammatic Number II.cpp"; sourceTree = "<group>"; };
		0A881B501F6B0E5C008CCA08 /* 245. Shortest Word Distance III.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "245. Shortest Word Distance III.cpp"; sourceTree = "<group>"; };
		0A881B511F6B0E5C008CCA08 /* 469. Convex Polygon.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "469. Convex Polygon.cpp"; sourceTree = "<group>"; };
		0A881B521F6B0E5C008CCA08 /* 444. Sequence Reconstruction.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "444. Sequence Reconstruction.cpp"; sourceTree = "<group>"; };
		0A881B531F6B0E5C008CCA08 /* 439. Ternary Expression Parser.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "439. Ternary Expression Parser.cpp"; sourceTree = "<group>"; };
		0A881B541F6B0E5C008CCA08 /* 244. Shortest Word Distance II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "244. Shortest Word Distance II.cpp"; sourceTree = "<group>"; };
		0A881B551F6B0E5C008CCA08 /* 186. Reverse Words in a String II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "186. Reverse Words in a String II.cpp"; sourceTree = "<group>"; };
		0A881B561F6B0E5C008CCA08 /* 163. Missing Ranges.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "163. Missing Ranges.cpp"; sourceTree = "<group>"; };
		0A881B571F6B0E5C008CCA08 /* 156. Binary Tree Upside Down.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "156. Binary Tree Upside Down.cpp"; sourceTree = "<group>"; };
		0A881B581F6B0E5C008CCA08 /* 281. Zigzag Iterator.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "281. Zigzag Iterator.cpp"; sourceTree = "<group>"; };
		0A881B591F6B0E5C008CCA08 /* 161. One Edit Distance.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "161. One Edit Distance.cpp"; sourceTree = "<group>"; };
		0A881B5A1F6B0E5C008CCA08 /* 269. Alien Dictionary.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "269. Alien Dictionary.cpp"; sourceTree = "<group>"; };
		0A881B5B1F6B0E5D008CCA08 /* 311. Sparse Matrix Multiplication.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "311. Sparse Matrix Multiplication.cpp"; sourceTree = "<group>"; };
		0A881B5C1F6B0E5D008CCA08 /* 253. Meeting Rooms II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "253. Meeting Rooms II.cpp"; sourceTree = "<group>"; };
		0A881B5D1F6B0E5D008CCA08 /* 296. Best Meeting Point.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "296. Best Meeting Point.cpp"; sourceTree = "<group>"; };
		0A881B5E1F6B0E5D008CCA08 /* 325. Maximum Size Subarray Sum Equals k.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "325. Maximum Size Subarray Sum Equals k.cpp"; sourceTree = "<group>"; };
		0A881B5F1F6B0E5D008CCA08 /* 251. Flatten 2D Vector.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "251. Flatten 2D Vector.cpp"; sourceTree = "<group>"; };
		0A881B601F6B0E5D008CCA08 /* 159. Longest Substring with At Most Two Distinct Characters.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "159. Longest Substring with At Most Two Distinct Characters.cpp"; sourceTree = "<group>"; };
		0A881B611F6B0E5D008CCA08 /* 567. Permutation in String.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "567. Permutation in String.cpp"; sourceTree = "<group>"; };
		0A881B621F6B0E5D008CCA08 /* 209. Minimum Size Subarray Sum.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "209. Minimum Size Subarray Sum.cpp"; sourceTree = "<group>"; };
		0A881B631F6B0E5D008CCA08 /* 57. Insert Interval.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "57. Insert Interval.cpp"; sourceTree = "<group>"; };
		0A881B641F6B0E5D008CCA08 /* 324. Wiggle Sort II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "324. Wiggle Sort II.cpp"; sourceTree = "<group>"; };
		0A881B651F6B0E5D008CCA08 /* 75. Sort Colors.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "75. Sort Colors.cpp"; sourceTree = "<group>"; };
		0A881B661F6B0E5D008CCA08 /* 34. Search for a Range.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "34. Search for a Range.cpp"; sourceTree = "<group>"; };
		0A881B671F6B0E5D008CCA08 /* 354. Russian Doll Envelopes.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "354. Russian Doll Envelopes.cpp"; sourceTree = "<group>"; };
		0A881B681F6B0E5D008CCA08 /* 222. Count Complete Tree Nodes.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "222. Count Complete Tree Nodes.cpp"; sourceTree = "<group>"; };
		0A881B691F6B0E5D008CCA08 /* 272. Closest Binary Search Tree Value II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "272. Closest Binary Search Tree Value II.cpp"; sourceTree = "<group>"; };
		0A881B6A1F6B0E5D008CCA08 /* 71. Simplify Path.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "71. Simplify Path.cpp"; sourceTree = "<group>"; };
		0A881B6B1F6B0E5D008CCA08 /* 547. Friend Circles   Add to List 547. Friend Circles 547. Friend Circles 547. Friend Circles 547. Friend Circle.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "547. Friend Circles   Add to List 547. Friend Circles 547. Friend Circles 547. Friend Circles 547. Friend Circle.cpp"; sourceTree = "<group>"; };
		0A881B8D1F6E09FA008CCA08 /* 680. Valid Palindrome II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "680. Valid Palindrome II.cpp"; sourceTree = "<group>"; };
		360685901F5130B40017EC53 /* WordSearch2.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = WordSearch2.cpp; sourceTree = "<group>"; };
		360685921F5130DE0017EC53 /* Header.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Header.h; sourceTree = "<group>"; };
		360685931F51363E0017EC53 /* Exist.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = Exist.cpp; sourceTree = "<group>"; };
		360685951F5136ED0017EC53 /* FindMaxAverage.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = FindMaxAverage.cpp; sourceTree = "<group>"; };
		360685971F51373B0017EC53 /* SetZeroes.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = SetZeroes.cpp; sourceTree = "<group>"; };
		360685991F5137B80017EC53 /* GameOfLife.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = GameOfLife.cpp; sourceTree = "<group>"; };
		3606859B1F51381E0017EC53 /* FindRepeatedDnaSequences.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = FindRepeatedDnaSequences.cpp; sourceTree = "<group>"; };
		3606859D1F51C98D0017EC53 /* CountUnivalSubtrees.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = CountUnivalSubtrees.cpp; sourceTree = "<group>"; };
		3606859F1F51D3290017EC53 /* IsSubtree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = IsSubtree.cpp; sourceTree = "<group>"; };
		360685A11F51F06B0017EC53 /* MostFrequentSubtreeSum.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = MostFrequentSubtreeSum.cpp; sourceTree = "<group>"; };
		360685A31F5214620017EC53 /* MinimumWindowSubstring.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = MinimumWindowSubstring.cpp; sourceTree = "<group>"; };
		360685A51F5258B10017EC53 /* Non-decreasingArray.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "Non-decreasingArray.cpp"; sourceTree = "<group>"; };
		360685A71F525F720017EC53 /* PathSumIV.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = PathSumIV.cpp; sourceTree = "<group>"; };
		360685AC1F5274330017EC53 /* BeautifulArrangement2.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = BeautifulArrangement2.cpp; sourceTree = "<group>"; };
		360685AE1F527B930017EC53 /* Kth largest Number in Multiplication Table.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "Kth largest Number in Multiplication Table.cpp"; sourceTree = "<group>"; };
		368031871F71D83A0002F47A /* 259. 3Sum Smaller.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "259. 3Sum Smaller.cpp"; sourceTree = "<group>"; };
		368031881F71D83B0002F47A /* 254. Factor Combinations.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "254. Factor Combinations.cpp"; sourceTree = "<group>"; };
		368031891F71D83B0002F47A /* 267. Palindrome Permutation II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "267. Palindrome Permutation II.cpp"; sourceTree = "<group>"; };
		3680318A1F71D83B0002F47A /* 285. Inorder Successor in BST.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "285. Inorder Successor in BST.cpp"; sourceTree = "<group>"; };
		3680318B1F71D83B0002F47A /* 677. Map Sum Pairs.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "677. Map Sum Pairs.cpp"; sourceTree = "<group>"; };
		3680318C1F71D83B0002F47A /* 679. 24 Game.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "679. 24 Game.cpp"; sourceTree = "<group>"; };
		3680318D1F71D83B0002F47A /* 255. Verify Preorder Sequence in Binary Search Tree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "255. Verify Preorder Sequence in Binary Search Tree.cpp"; sourceTree = "<group>"; };
		3680318E1F71D83B0002F47A /* 286. Walls and Gates.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "286. Walls and Gates.cpp"; sourceTree = "<group>"; };
		3680318F1F71D83B0002F47A /* 271. Encode and Decode Strings.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "271. Encode and Decode Strings.cpp"; sourceTree = "<group>"; };
		368031901F71D83B0002F47A /* 678. Valid Parenthesis String.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "678. Valid Parenthesis String.cpp"; sourceTree = "<group>"; };
		36D18A671F54C5520017032F /* 621. Task Scheduler.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "621. Task Scheduler.cpp"; sourceTree = "<group>"; };
		36D18A691F54F36E0017032F /* 358. Rearrange String k Distance Apart.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "358. Rearrange String k Distance Apart.cpp"; sourceTree = "<group>"; };
		36D18A6B1F5503C70017032F /* 134. Gas Station.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "134. Gas Station.cpp"; sourceTree = "<group>"; };
		36D18A6D1F550BC40017032F /* 45. Jump Game II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "45. Jump Game II.cpp"; sourceTree = "<group>"; };
		36D18A6F1F561E0F0017032F /* 207. Course Schedule.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "207. Course Schedule.cpp"; sourceTree = "<group>"; };
		36D18A711F5667840017032F /* 261. Graph Valid Tree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "261. Graph Valid Tree.cpp"; sourceTree = "<group>"; };
		36D18A731F5719A10017032F /* 323. Number of Connected Components in an Undirected Graph.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "323. Number of Connected Components in an Undirected Graph.cpp"; sourceTree = "<group>"; };
		36D18A771F57A5AF0017032F /* 657. Judge Route Circle.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "657. Judge Route Circle.cpp"; sourceTree = "<group>"; };
		36D18A791F57A8660017032F /* 32. Longest Valid Parentheses.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "32. Longest Valid Parentheses.cpp"; sourceTree = "<group>"; };
		36ECE6841E9712830064A628 /* GoogleCodeJam */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = GoogleCodeJam; sourceTree = BUILT_PRODUCTS_DIR; };
		36ECE6871E9712830064A628 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		36ECE6811E9712830064A628 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		36ECE67B1E9712830064A628 = {
			isa = PBXGroup;
			children = (
				36ECE6861E9712830064A628 /* GoogleCodeJam */,
				36ECE6851E9712830064A628 /* Products */,
			);
			sourceTree = "<group>";
		};
		36ECE6851E9712830064A628 /* Products */ = {
			isa = PBXGroup;
			children = (
				36ECE6841E9712830064A628 /* GoogleCodeJam */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		36ECE6861E9712830064A628 /* GoogleCodeJam */ = {
			isa = PBXGroup;
			children = (
				36D18A791F57A8660017032F /* 32. Longest Valid Parentheses.cpp */,
				0A881B661F6B0E5D008CCA08 /* 34. Search for a Range.cpp */,
				36D18A6D1F550BC40017032F /* 45. Jump Game II.cpp */,
				0A881B631F6B0E5D008CCA08 /* 57. Insert Interval.cpp */,
				0A881B6A1F6B0E5D008CCA08 /* 71. Simplify Path.cpp */,
				0A881B651F6B0E5D008CCA08 /* 75. Sort Colors.cpp */,
				36D18A6B1F5503C70017032F /* 134. Gas Station.cpp */,
				0A881B571F6B0E5C008CCA08 /* 156. Binary Tree Upside Down.cpp */,
				0A881B601F6B0E5D008CCA08 /* 159. Longest Substring with At Most Two Distinct Characters.cpp */,
				0A881B591F6B0E5C008CCA08 /* 161. One Edit Distance.cpp */,
				0A881B561F6B0E5C008CCA08 /* 163. Missing Ranges.cpp */,
				0A881B551F6B0E5C008CCA08 /* 186. Reverse Words in a String II.cpp */,
				36D18A6F1F561E0F0017032F /* 207. Course Schedule.cpp */,
				0A881B621F6B0E5D008CCA08 /* 209. Minimum Size Subarray Sum.cpp */,
				0A881B681F6B0E5D008CCA08 /* 222. Count Complete Tree Nodes.cpp */,
				0A881B541F6B0E5C008CCA08 /* 244. Shortest Word Distance II.cpp */,
				0A881B501F6B0E5C008CCA08 /* 245. Shortest Word Distance III.cpp */,
				0A881B4F1F6B0E5C008CCA08 /* 247. Strobogrammatic Number II.cpp */,
				0A881B5F1F6B0E5D008CCA08 /* 251. Flatten 2D Vector.cpp */,
				0A881B5C1F6B0E5D008CCA08 /* 253. Meeting Rooms II.cpp */,
				368031881F71D83B0002F47A /* 254. Factor Combinations.cpp */,
				3680318D1F71D83B0002F47A /* 255. Verify Preorder Sequence in Binary Search Tree.cpp */,
				368031871F71D83A0002F47A /* 259. 3Sum Smaller.cpp */,
				36D18A711F5667840017032F /* 261. Graph Valid Tree.cpp */,
				368031891F71D83B0002F47A /* 267. Palindrome Permutation II.cpp */,
				0A881B5A1F6B0E5C008CCA08 /* 269. Alien Dictionary.cpp */,
				3680318F1F71D83B0002F47A /* 271. Encode and Decode Strings.cpp */,
				0A881B691F6B0E5D008CCA08 /* 272. Closest Binary Search Tree Value II.cpp */,
				0A881B581F6B0E5C008CCA08 /* 281. Zigzag Iterator.cpp */,
				3680318A1F71D83B0002F47A /* 285. Inorder Successor in BST.cpp */,
				3680318E1F71D83B0002F47A /* 286. Walls and Gates.cpp */,
				0A881B5D1F6B0E5D008CCA08 /* 296. Best Meeting Point.cpp */,
				0A881B5B1F6B0E5D008CCA08 /* 311. Sparse Matrix Multiplication.cpp */,
				36D18A731F5719A10017032F /* 323. Number of Connected Components in an Undirected Graph.cpp */,
				0A881B641F6B0E5D008CCA08 /* 324. Wiggle Sort II.cpp */,
				0A881B5E1F6B0E5D008CCA08 /* 325. Maximum Size Subarray Sum Equals k.cpp */,
				0A881B671F6B0E5D008CCA08 /* 354. Russian Doll Envelopes.cpp */,
				36D18A691F54F36E0017032F /* 358. Rearrange String k Distance Apart.cpp */,
				0A881B531F6B0E5C008CCA08 /* 439. Ternary Expression Parser.cpp */,
				0A881B521F6B0E5C008CCA08 /* 444. Sequence Reconstruction.cpp */,
				0A881B511F6B0E5C008CCA08 /* 469. Convex Polygon.cpp */,
				0A881B6B1F6B0E5D008CCA08 /* 547. Friend Circles   Add to List 547. Friend Circles 547. Friend Circles 547. Friend Circles 547. Friend Circle.cpp */,
				0A881B611F6B0E5D008CCA08 /* 567. Permutation in String.cpp */,
				36D18A671F54C5520017032F /* 621. Task Scheduler.cpp */,
				36D18A771F57A5AF0017032F /* 657. Judge Route Circle.cpp */,
				0A881B4C1F6B0E5C008CCA08 /* 673. Number of Longest Increasing Subsequence.cpp */,
				0A881B4E1F6B0E5C008CCA08 /* 674. Longest Continuous Increasing Subsequence.cpp */,
				0A881B4B1F6B0E5C008CCA08 /* 675. Cut Off Trees for Golf Event.cpp */,
				0A881B4D1F6B0E5C008CCA08 /* 676. Implement Magic Dictionary.cpp */,
				3680318B1F71D83B0002F47A /* 677. Map Sum Pairs.cpp */,
				368031901F71D83B0002F47A /* 678. Valid Parenthesis String.cpp */,
				3680318C1F71D83B0002F47A /* 679. 24 Game.cpp */,
				0A881B8D1F6E09FA008CCA08 /* 680. Valid Palindrome II.cpp */,
				360685AC1F5274330017EC53 /* BeautifulArrangement2.cpp */,
				3606859D1F51C98D0017EC53 /* CountUnivalSubtrees.cpp */,
				360685931F51363E0017EC53 /* Exist.cpp */,
				360685951F5136ED0017EC53 /* FindMaxAverage.cpp */,
				3606859B1F51381E0017EC53 /* FindRepeatedDnaSequences.cpp */,
				360685991F5137B80017EC53 /* GameOfLife.cpp */,
				360685921F5130DE0017EC53 /* Header.h */,
				3606859F1F51D3290017EC53 /* IsSubtree.cpp */,
				360685AE1F527B930017EC53 /* Kth largest Number in Multiplication Table.cpp */,
				36ECE6871E9712830064A628 /* main.cpp */,
				360685A31F5214620017EC53 /* MinimumWindowSubstring.cpp */,
				360685A11F51F06B0017EC53 /* MostFrequentSubtreeSum.cpp */,
				360685A51F5258B10017EC53 /* Non-decreasingArray.cpp */,
				360685A71F525F720017EC53 /* PathSumIV.cpp */,
				360685971F51373B0017EC53 /* SetZeroes.cpp */,
				360685901F5130B40017EC53 /* WordSearch2.cpp */,
			);
			path = GoogleCodeJam;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		36ECE6831E9712830064A628 /* GoogleCodeJam */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 36ECE68B1E9712830064A628 /* Build configuration list for PBXNativeTarget "GoogleCodeJam" */;
			buildPhases = (
				36ECE6801E9712830064A628 /* Sources */,
				36ECE6811E9712830064A628 /* Frameworks */,
				36ECE6821E9712830064A628 /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = GoogleCodeJam;
			productName = GoogleCodeJam;
			productReference = 36ECE6841E9712830064A628 /* GoogleCodeJam */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		36ECE67C1E9712830064A628 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 0830;
				ORGANIZATIONNAME = "yujian liu";
				TargetAttributes = {
					36ECE6831E9712830064A628 = {
						CreatedOnToolsVersion = 8.3;
						ProvisioningStyle = Automatic;
					};
				};
			};
			buildConfigurationList = 36ECE67F1E9712830064A628 /* Build configuration list for PBXProject "GoogleCodeJam" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = 36ECE67B1E9712830064A628;
			productRefGroup = 36ECE6851E9712830064A628 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				36ECE6831E9712830064A628 /* GoogleCodeJam */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		36ECE6801E9712830064A628 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				0A881B791F6B0E5D008CCA08 /* 281. Zigzag Iterator.cpp in Sources */,
				360685A81F525F720017EC53 /* PathSumIV.cpp in Sources */,
				36D18A681F54C5520017032F /* 621. Task Scheduler.cpp in Sources */,
				368031951F71D83B0002F47A /* 677. Map Sum Pairs.cpp in Sources */,
				36D18A6C1F5503C70017032F /* 134. Gas Station.cpp in Sources */,
				0A881B781F6B0E5D008CCA08 /* 156. Binary Tree Upside Down.cpp in Sources */,
				0A881B831F6B0E5D008CCA08 /* 209. Minimum Size Subarray Sum.cpp in Sources */,
				3606859C1F51381E0017EC53 /* FindRepeatedDnaSequences.cpp in Sources */,
				36D18A781F57A5AF0017032F /* 657. Judge Route Circle.cpp in Sources */,
				0A881B881F6B0E5D008CCA08 /* 354. Russian Doll Envelopes.cpp in Sources */,
				368031931F71D83B0002F47A /* 267. Palindrome Permutation II.cpp in Sources */,
				36D18A6A1F54F36E0017032F /* 358. Rearrange String k Distance Apart.cpp in Sources */,
				360685A01F51D3290017EC53 /* IsSubtree.cpp in Sources */,
				0A881B6F1F6B0E5D008CCA08 /* 674. Longest Continuous Increasing Subsequence.cpp in Sources */,
				0A881B891F6B0E5D008CCA08 /* 222. Count Complete Tree Nodes.cpp in Sources */,
				3606859A1F5137B80017EC53 /* GameOfLife.cpp in Sources */,
				36D18A741F5719A10017032F /* 323. Number of Connected Components in an Undirected Graph.cpp in Sources */,
				36D18A721F5667840017032F /* 261. Graph Valid Tree.cpp in Sources */,
				0A881B8C1F6B0E5D008CCA08 /* 547. Friend Circles   Add to List 547. Friend Circles 547. Friend Circles 547. Friend Circles 547. Friend Circle.cpp in Sources */,
				0A881B7D1F6B0E5D008CCA08 /* 253. Meeting Rooms II.cpp in Sources */,
				0A881B871F6B0E5D008CCA08 /* 34. Search for a Range.cpp in Sources */,
				360685911F5130B40017EC53 /* WordSearch2.cpp in Sources */,
				0A881B741F6B0E5D008CCA08 /* 439. Ternary Expression Parser.cpp in Sources */,
				0A881B731F6B0E5D008CCA08 /* 444. Sequence Reconstruction.cpp in Sources */,
				0A881B751F6B0E5D008CCA08 /* 244. Shortest Word Distance II.cpp in Sources */,
				0A881B6C1F6B0E5D008CCA08 /* 675. Cut Off Trees for Golf Event.cpp in Sources */,
				368031971F71D83B0002F47A /* 255. Verify Preorder Sequence in Binary Search Tree.cpp in Sources */,
				360685A61F5258B10017EC53 /* Non-decreasingArray.cpp in Sources */,
				360685A41F5214620017EC53 /* MinimumWindowSubstring.cpp in Sources */,
				0A881B8E1F6E09FA008CCA08 /* 680. Valid Palindrome II.cpp in Sources */,
				0A881B771F6B0E5D008CCA08 /* 163. Missing Ranges.cpp in Sources */,
				0A881B711F6B0E5D008CCA08 /* 245. Shortest Word Distance III.cpp in Sources */,
				36D18A701F561E0F0017032F /* 207. Course Schedule.cpp in Sources */,
				368031991F71D83B0002F47A /* 271. Encode and Decode Strings.cpp in Sources */,
				0A881B7E1F6B0E5D008CCA08 /* 296. Best Meeting Point.cpp in Sources */,
				0A881B6E1F6B0E5D008CCA08 /* 676. Implement Magic Dictionary.cpp in Sources */,
				360685961F5136ED0017EC53 /* FindMaxAverage.cpp in Sources */,
				0A881B8A1F6B0E5D008CCA08 /* 272. Closest Binary Search Tree Value II.cpp in Sources */,
				368031911F71D83B0002F47A /* 259. 3Sum Smaller.cpp in Sources */,
				0A881B7A1F6B0E5D008CCA08 /* 161. One Edit Distance.cpp in Sources */,
				36ECE6881E9712830064A628 /* main.cpp in Sources */,
				360685AF1F527B940017EC53 /* Kth largest Number in Multiplication Table.cpp in Sources */,
				360685AD1F5274330017EC53 /* BeautifulArrangement2.cpp in Sources */,
				0A881B851F6B0E5D008CCA08 /* 324. Wiggle Sort II.cpp in Sources */,
				3606859E1F51C98D0017EC53 /* CountUnivalSubtrees.cpp in Sources */,
				0A881B801F6B0E5D008CCA08 /* 251. Flatten 2D Vector.cpp in Sources */,
				3680319A1F71D83B0002F47A /* 678. Valid Parenthesis String.cpp in Sources */,
				360685A21F51F06B0017EC53 /* MostFrequentSubtreeSum.cpp in Sources */,
				368031941F71D83B0002F47A /* 285. Inorder Successor in BST.cpp in Sources */,
				0A881B861F6B0E5D008CCA08 /* 75. Sort Colors.cpp in Sources */,
				360685981F51373B0017EC53 /* SetZeroes.cpp in Sources */,
				0A881B7B1F6B0E5D008CCA08 /* 269. Alien Dictionary.cpp in Sources */,
				0A881B811F6B0E5D008CCA08 /* 159. Longest Substring with At Most Two Distinct Characters.cpp in Sources */,
				36D18A7A1F57A8660017032F /* 32. Longest Valid Parentheses.cpp in Sources */,
				360685941F51363E0017EC53 /* Exist.cpp in Sources */,
				0A881B7F1F6B0E5D008CCA08 /* 325. Maximum Size Subarray Sum Equals k.cpp in Sources */,
				368031961F71D83B0002F47A /* 679. 24 Game.cpp in Sources */,
				0A881B6D1F6B0E5D008CCA08 /* 673. Number of Longest Increasing Subsequence.cpp in Sources */,
				368031921F71D83B0002F47A /* 254. Factor Combinations.cpp in Sources */,
				0A881B761F6B0E5D008CCA08 /* 186. Reverse Words in a String II.cpp in Sources */,
				0A881B701F6B0E5D008CCA08 /* 247. Strobogrammatic Number II.cpp in Sources */,
				0A881B841F6B0E5D008CCA08 /* 57. Insert Interval.cpp in Sources */,
				0A881B821F6B0E5D008CCA08 /* 567. Permutation in String.cpp in Sources */,
				368031981F71D83B0002F47A /* 286. Walls and Gates.cpp in Sources */,
				0A881B721F6B0E5D008CCA08 /* 469. Convex Polygon.cpp in Sources */,
				0A881B7C1F6B0E5D008CCA08 /* 311. Sparse Matrix Multiplication.cpp in Sources */,
				0A881B8B1F6B0E5D008CCA08 /* 71. Simplify Path.cpp in Sources */,
				36D18A6E1F550BC40017032F /* 45. Jump Game II.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin XCBuildConfiguration section */
		36ECE6891E9712830064A628 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				CODE_SIGN_IDENTITY = "-";
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.12;
				MTL_ENABLE_DEBUG_INFO = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
			};
			name = Debug;
		};
		36ECE68A1E9712830064A628 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				CODE_SIGN_IDENTITY = "-";
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.12;
				MTL_ENABLE_DEBUG_INFO = NO;
				SDKROOT = macosx;
			};
			name = Release;
		};
		36ECE68C1E9712830064A628 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Debug;
		};
		36ECE68D1E9712830064A628 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		36ECE67F1E9712830064A628 /* Build configuration list for PBXProject "GoogleCodeJam" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				36ECE6891E9712830064A628 /* Debug */,
				36ECE68A1E9712830064A628 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		36ECE68B1E9712830064A628 /* Build configuration list for PBXNativeTarget "GoogleCodeJam" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				36ECE68C1E9712830064A628 /* Debug */,
				36ECE68D1E9712830064A628 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 36ECE67C1E9712830064A628 /* Project object */;
}
